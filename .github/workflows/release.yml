name: Release Go Project

on:
  push:
    tags:
      - 'v*'  # Push events to tags starting with 'v', like v1.0, v0.1.0

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Get version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o go-interface-enum-explorer-linux-amd64 -ldflags="-X 'main.Version=${{ steps.get_version.outputs.VERSION }}'" ./...
          GOOS=linux GOARCH=arm64 go build -o go-interface-enum-explorer-linux-arm64 -ldflags="-X 'main.Version=${{ steps.get_version.outputs.VERSION }}'" ./...

      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o go-interface-enum-explorer-macos-amd64 -ldflags="-X 'main.Version=${{ steps.get_version.outputs.VERSION }}'" ./...
          GOOS=darwin GOARCH=arm64 go build -o go-interface-enum-explorer-macos-arm64 -ldflags="-X 'main.Version=${{ steps.get_version.outputs.VERSION }}'" ./...

      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o go-interface-enum-explorer-windows-amd64.exe -ldflags="-X 'main.Version=${{ steps.get_version.outputs.VERSION }}'" ./...

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            go-interface-enum-explorer-linux-amd64
            go-interface-enum-explorer-linux-arm64
            go-interface-enum-explorer-macos-amd64
            go-interface-enum-explorer-macos-arm64
            go-interface-enum-explorer-windows-amd64.exe